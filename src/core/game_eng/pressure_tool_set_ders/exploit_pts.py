import exceptions

from game_eng.pressure_tool_set import PressureToolSet
from game_eng.grid_tile import GridTile


class ExploitPTSet(PressureToolSet):
    __END_PRODUCT__ = None

    @property
    def start_market_count(self) -> int:
        return 2

    @property
    def production_cost(self) -> int:
        return 32

    @property
    def name(self) -> str:
        return "Эксплойт"

    def _try_apply(self, target) -> bool:
        if type(target) == GridTile:
            return False
        self.__target = target
        self.__prev_owner = target.team
        target.team = self._player.team
        return True

    def try_cancel(self) -> bool:
        if not hasattr(self, "__target"):
            raise exceptions.InvalidOperationException()
        self.__target.team = self.__prev_owner
        del self.__target
        del self.__prev_owner
        return True
